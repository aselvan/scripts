#!/bin/sh
################################################################################
#
# firewall - Simple wrapper script to manipulate firewall rules
#
# 
# NOTE: From Yosemite onwards, ipfw is no logner supported so and we
#       have to use PF (pfctl) to setup firewall.
#
# See also: pf_rule_simple.conf
#
# Author:  Arul Selvan
# Version: Feb 7, 2015
#
# Version History:
#   Feb 7,  2015 --- original version
#   Jan 16, 2025 --- update for table name change and additional tables
#
################################################################################

anchor_name="com.selvansoft"
rule_set="/etc/pf.conf"

usage() {
  echo "Usage: $0 <start|stop|status|allstatus|addip|deleteip|showtable|flushtable|blockip|unblockip>"
  exit
}

start_firewall() {
  # enable pf 
  /sbin/pfctl -e

  # flush all existing rules
  /sbin/pfctl -F all

  # add our rules
  /sbin/pfctl -f $rule_set
}

stop_firewall() {
  # flush our existing rules
  /sbin/pfctl -a $anchor_name -F all
  /sbin/pfctl -F all
}

# ---- main -----
uid=`id -u`
if [ $uid -ne 0 ]; then
  echo "You need to be root to execute $0 script"
  exit
fi

if [ $# -eq 0 ]; then
  usage
fi

while [ "$1" ] 
do
  if [ "$1" = "start" ]; then
     echo "Starting firewall ..."
     start_firewall
     break
  elif [ "$1" = "stop" ]; then
     echo "Stopping firewall ..."
     stop_firewall
     break
  elif [ "$1" = "status" ]; then
     echo "Listing firewall rules ..."
     echo "--- Global rules ---"
     /sbin/pfctl -sr 2>/dev/null
     echo "--- Anchor: $anchor_name rules ---"
     /sbin/pfctl -a $anchor_name -sr 2>/dev/null
     echo "--- Dynamic table list (if any) ---"
     /sbin/pfctl -a $anchor_name -t dynamic_list -T show 2>/dev/null
     echo "--- Blocked table list (if any) ---"
     /sbin/pfctl -a $anchor_name -t blocked_list -T show 2>/dev/null
     echo "--- non-routable table list (if any) ---"
     /sbin/pfctl -a $anchor_name -t non_routable_list -T show 2>/dev/null
     break
  elif [ "$1" = "allstatus" ]; then
     echo "Listing firewall rules ..."
     /sbin/pfctl -sa 2>/dev/null
     /sbin/pfctl -a $anchor_name -sa 2>/dev/null
     break
  elif [ "$1" = "addip" ]; then
     shift 1
     if [ -z $1 ]; then
        echo "addip needs IP/CIDR/Host address as argument"
        usage
     fi
     echo "Adding $1 to the dynamic_list table..."
     pfctl -a $anchor_name -t dynamic_list -T add $1 2>/dev/null
     break
  elif [ "$1" = "deleteip" ]; then
     shift 1
     if [ -z $1 ]; then
        echo "deleteip needs IP/CIDR/Host address as argument"
        usage
     fi
     echo "Deleting $1 from the dynamic_list table..."
     pfctl -a $anchor_name -t dynamic_list -T delete $1 2>/dev/null
     break
  elif [ "$1" = "blockip" ]; then
     shift 1
     if [ -z $1 ]; then
        echo "blockip needs IP/CIDR/Host address as argument"
        usage
     fi
     echo "Adding $1 to the blocked_list table..."
     pfctl -a $anchor_name -t blocked_list -T add $1 2>/dev/null
     break
  elif [ "$1" = "unblockip" ]; then
     shift 1
     if [ -z $1 ]; then
        echo "unblockip needs IP/CIDR/Host address as argument"
        usage
     fi
     echo "Deleting $1 from the blocked_list table..."
     pfctl -a $anchor_name -t blocked_list -T delete $1 2>/dev/null
     break
  elif [ "$1" = "flushtable" ]; then
     echo "Flushing the dynamic_list table..."
     pfctl -a $anchor_name -t dynamic_list -T flush 2>/dev/null
     break
  elif [ "$1" = "showtable" ]; then
     echo "Showing dynamic_list table..."
     echo "--- Allowed table: dynamic_list ----"
     pfctl -a $anchor_name -t dynamic_list -T show 2>/dev/null
     echo "--- Blocked table: blocked_list ----"
     pfctl -a $anchor_name -t blocked_list -T show 2>/dev/null
     echo "--- non-routable table: non_routable_list ----"
     pfctl -a $anchor_name -t non_routable_list -T show 2>/dev/null
     break
  else
     usage
  fi
done
